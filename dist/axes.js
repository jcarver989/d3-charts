// Generated by CoffeeScript 1.10.0
var Axes;

Axes = (function() {
  function Axes(svg, scales, options) {
    this.options = options;
    this.xAxisSelection = svg.append("g").attr("class", "x axis");
    this.yAxisSelection = svg.append("g").attr("class", "y axis");
    this.xAxis = this.newAxis(scales.x, "bottom");
    this.yAxis = this.newAxis(scales.y, "left");
  }

  Axes.prototype.draw = function(width, height) {
    var ticks;
    this.xAxisSelection.attr("transform", "translate(0," + height + ")");
    if (this.options.grid) {
      this.xAxis.tickSize(-height);
      this.yAxis.tickSize(-width);
    }
    if (this.options.xTickInterval) {
      ticks = (function() {
        switch (this.options.xTickInterval) {
          case "seconds":
            return d3.time.seconds;
          case "minutes":
            return d3.time.minutes;
          case "hours":
            return d3.time.hours;
          case "days":
            return d3.time.days;
          case "months":
            return d3.time.months;
          case "years":
            return d3.time.years;
        }
      }).call(this);
      this.xAxis.ticks(ticks);
    } else if (this.options.ticks) {
      this.xAxis.ticks(this.options.ticks);
    }
    if (this.options.xTickFormat) {
      this.xAxis.tickFormat(d3.time.format(this.options.xTickFormat));
    }
    this.xAxisSelection.call(this.xAxis);
    return this.yAxisSelection.call(this.yAxis);
  };

  Axes.prototype.newAxis = function(scale, orientation) {
    return d3.svg.axis().scale(scale).orient(orientation).tickPadding(this.options.tickPadding);
  };

  return Axes;

})();
