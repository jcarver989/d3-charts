// Generated by CoffeeScript 1.10.0
var AbstractChart,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

AbstractChart = (function() {
  function AbstractChart(selector, options) {
    var h, ref, w;
    if (options == null) {
      options = {};
    }
    this.updateDimensions = bind(this.updateDimensions, this);
    this.options = this.mergeOptions(defaultOptions, options);
    this.svg = new Svg(selector, this.options.margin);
    this.scales = Scales.fromString(this.options.xScale, this.options.yScale);
    this.axes = new Axes(this.svg.chart, this.scales, this.options);
    ref = this.options.aspectRatio.split(":"), w = ref[0], h = ref[1];
    this.aspectRatio = [parseInt(w), parseInt(h)];
    this.updateDimensions();
  }

  AbstractChart.prototype.mergeOptions = function(defaults, userSpecified) {
    var key, opts, val;
    opts = {};
    for (key in defaults) {
      val = defaults[key];
      opts[key] = defaults[key];
    }
    for (key in userSpecified) {
      val = userSpecified[key];
      opts[key] = userSpecified[key];
    }
    return opts;
  };

  AbstractChart.prototype.updateDimensions = function() {
    var h, margin, newHeight, ref, w;
    ref = this.svg.getSize(), w = ref[0], h = ref[1];
    newHeight = w / this.aspectRatio[0] * this.aspectRatio[1];
    margin = this.options.margin;
    this.width = w - margin.left - margin.right;
    this.height = newHeight - margin.bottom - margin.top;
    this.scales.setRanges(this.width, this.height);
    return this.svg.setSize(w, newHeight);
  };

  return AbstractChart;

})();
